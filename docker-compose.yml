services:
  load-balancer:
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
      - "9090:9090"
    environment:
      CONFIG_PATH: /etc/load-balancer/config.yml
    volumes:
      - ./config/example_docker/config.yml:/etc/load-balancer/config.yml:ro
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:16-alpine3.21
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres" ]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 10s

  backend1:
    image: nginx:stable-alpine3.21
    volumes:
      - ./config/example_docker/html/1:/usr/share/nginx/html:ro
      - ./config/example_docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  backend2:
    image: nginx:stable-alpine3.21
    volumes:
      - ./config/example_docker/html/2:/usr/share/nginx/html:ro
      - ./config/example_docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  backend3:
    image: nginx:stable-alpine3.21
    volumes:
      - ./config/example_docker/html/3:/usr/share/nginx/html:ro
      - ./config/example_docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  postgres_data: